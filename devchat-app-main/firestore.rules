rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      // Allow users to update their own profile data including avatar image
      allow update: if isOwner(userId) && 
                     (request.resource.data.diff(resource.data).affectedKeys()
                      .hasOnly(['displayName', 'photoURL', 'avatarImage', 'updatedAt']));
      allow create: if isOwner(userId);
    }

    // Channels collection
    match /channels/{channelId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      
      // Messages subcollection in channels
      match /messages/{messageId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && resource.data.sender.uid == request.auth.uid;
      }
    }

    // Donations collection
    match /donations/{donationId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
  }
}
